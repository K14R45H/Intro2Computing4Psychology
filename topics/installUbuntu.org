# -*- org-link-file-path-type: relative; -*-
#+TITLE: Installing Linux 

* Your goal ...
  is to install a _bootable_, _persistent_, Linux operating system. I recommend Xubuntu 20.04 to get started. You can use a USB, sd card, dual boot, or single boot your laptop, but I /recommend/ the virtual machine route. 

  But see: https://xkcd.com/456/
* Overview
  For this topic we will install a new operating system to your computer. We will use a flavor of linux called "Ubuntu." Linux is the ~kernel~ of the operating system and all the flavors, also called distributions: distros for short; are sets of packages that were curated by the distribution's creators to give a look or facilitate an ease of use. Underneath they all run the some version of the same kernel (versions are specified numerically).

  There are [[*Other Methods][many ways]] to get Linux working on your computer and many varieties of Linux to try. If you are brave try dual-booting (there are lots of online resources - make sure you look at recent ones). If you have an older spare laptop why not make that your linux laptop and install only linux to it. As most new users are hesitant to make those big leaps, at least initially, for the following material I will assume that you want to run a Live version where you can try out Linux without installing anything to your personal computer. Thus, the material below describes mostly how to get a /persistent/ live USB with Ubuntu so that you can begin to use linux for the learning objectives of this course. 

** What operating system are you using now?
   Probably either Windows10/11 or OSX, but there are others. 

* Summary of Steps
  1. We will need to get a version of the Ubuntu operating system downloaded to our computer.
  2. You may need an /iso/. This is a file that you can "burn" to a cd/rom, sdcard or usb. You can boot from it (you may need to get to your [[https://vimeo.com/channels/i2c4p/699876547][bios for this]]. Or look up the Mac command for booting from a peripheral. There are links below for getting this file.
  3. You may need that file for your virtual machine (or if you choose one of the other methods). In the meantime you can boot from it to play with the linux operating system without installing anything. The downside of this is that none of your work will be saved.
  4. Install the virtual machine software and then install the Xubuntu operating system. Verify you can use it. Save something. And that something is still there when you come back later. More on virtual machines below.

* Justification for Ubuntu
  - Why use Ubuntu? :: There are many different Linux distributions. Some of them are Debian, Archlinux, Fedora, OpenSuse, and NixOS. Linux is the kernel that powers the system. All the rest are different choices people make of the tools they want to wrap around that "engine." The Ubuntu family of distributions has the best developed set of tools for getting started, and so it has a wealth of documentation to help beginning users get started. That large pool of users can make it easier to find help on line or among your colleagues. However, many experts use it too. You are not losing any potential power by using Ubuntu, but it does have a reputation of being a "heavy" distribution that makes larger demands on your processor. For older equipment XUbuntu and LUbuntu will put less resource demands on your system. But these alternative, lighter, versions, come at the expense of usability and appearance. Debian is a linux distribution that emphasizes free software. Fedora and OpenSuse are used more widely in industry and also in Europe. Archlinux has less support for the beginner, but can be easier to understand since many configurations are done through text files, and it has an excellent wiki. Even for other distros the [[https://wiki.archlinux.org/][Archlinux Wiki]] and Forums can be a good location for finding help. NixOS is a very different approach to Linux. It may well be the future, but as it breaks several of the common file conventions for Linux it is not recommended for newer users. I began with Ubuntu, but now run Archlinux on most of my lab and office computers. The next flavor I plan to try is [[https://guix.gnu.org/][guix]].
  - Xubuntu :: Because of my desire to support multiple older computers and running from a USBs or sdcards if necessary we will use Xubuntu, which is a little less memory and processing heavy. /Most/ (not always) of the time you read Ubuntu you can substitute Xubuntu in online help. But feel free to try Ubuntu if you prefer the flagship brand. Everything we do will for this course can be done with either. 

  
* Steps in Detail (Prior to Spring 2022)
  1. *Important Note*. Please read.
     I believe these instructions still work, and it is fine if you chose to follow them. You will learn a lot. *However* I am now recommending /virtual machines/. Please scroll down to the steps in detail for virtual machines unless you have a good reason to try this approach instead or you are just stubborn. 
  2. [[https://vimeo.com/448906706][A video introduction]].
  3. *Important Warning*
     If you find anything confusing and you decide to go to the Internet to look for help or videos make sure you pay attention to the *date* of the help/video. Things change rapidly. Videos from even one year ago may not be correct any longer. Certainly you should not use anything from more than three years ago without a very critical eye. There can be good information there, you just need to be increasingly careful the farther you go back in time. 
  4. Buy a *new* USB
     You can try to re-purpose an old one, but it is much safer, and a better use of your time to invest in a new one, and not the cheapest one you can find. You will be using this USB as your hard disk with lots of write and re-write operations. You want a high-quality USB of a healthy size. It needs to be a minimum of 8 GB, but you will probably run out of space if you go that small. 32 GB should be enough without getting too costly. Don't go ridiculously large (512 MB or 1TB).
     [[https://vimeo.com/448908514][Video on Your USB Needs]]
  5. Learn how to boot your computer from a USB ([[https://vimeo.com/448908272][video1: getting to your boot menu]] & [[https://vimeo.com/448908305][video2: boot menu walk-through]]).
     You should practice getting to your boot menu first. If you cannot figure out how to access it nothing you will do later will work. 
     Every computer manufacturer seems to do something different. You will have to search online for your computers make and model and some combination of how to boot to "Bios" or "UEFI" or "boot from USB".
     Some Hints that often work are: 
     - Mac OSX - start the computer with option key held down
     - Windows - F2 or F10 during the boot process - (look for a very briefly flashed screen and your computer does a full restart. There is often a very quick display that tells you which key to press to interrupt the start-up process). Another option is to tell Windows to boot from recovery mode. Find the "advanced" menu of the Windows Start Up menu (look in the "recovery" section of the start-up). Select from "another device". Some devices, like Surfaces, have other key combinations.
  6. Get the Ubuntu 20.04 Live CD file ([[https://vimeo.com/448908073][video: getting Ubuntu ISO]])
     Regardless of whether you currently use a Mac or Windows computer you will need to download a version of Ubuntu. You need an *ISO* version. Currently, I recommend [[http://mirror.csclub.uwaterloo.ca/xubuntu-releases/20.04/release/xubuntu-20.04.1-desktop-amd64.iso][Xbuntu 20.04 LTS (CS Club UWaterloo Mirror)]]. The most current long term support (LTS) changes from time to time. This is current as of this writing (<2020-09-01 Tue 06:34>). You will save this to the Desktop (or some other location where you can find it when needed below). 
     1. Live or Persistent?
	You want *persistent*. This will allow you to keep your settings, software, and files between uses.
     	A *live* version allows you to run and use Ubuntu. It will save things while you are using it, but when you turn it off all your settings are forgotten, and your saved files lost.
     2. Creating a _bootable_ USB requires more than copying over the file. For Windows you should use [[https://rufus.ie/][Rufus]]. And when you pick the installation type you want to use the persistent version (needs version 3.7 or greater - as described [[https://www.linuxuprising.com/2019/08/rufus-creating-persistent-storage-live.html][here]]).For Mac [[https://etcher.io/][Etcher]] is often recommended, but Etcher does not support persistence. There are other tools ([[https://unetbootin.github.io/][Unetbootin]] is recommended). If you have a friend with a windows computer you could always make the bootable USB on that computer, and then later on use it on your Mac. 
	1. Getting Rufus
	   Rufus is tool for creating a USB that you can boot from and that has persistent memory. You get it from [[https://rufus.ie/][here.]] [[https://vimeo.com/448908150][video: getting Rufus]]
	2. Using Rufus
	   Rufus runs without being installed to your computer, but you do need to be able to find the file you downloaded. Pay attention to where your downloads go. On Windows this is typically your "Downloads" folder. You double click the file icon to launch it, and you will have to give it administrative privledges to allow it to write to your USB disk. Make sure that you have the USB plugged in to your computer when you launch Rufus so it can find the disk it is trying to write too. And for safety's sake only have that one USB plugged in.
	   [[https://vimeo.com/448908151][video: using Rufus]]
	3. Concluding Rufus
	   After Rufus finishes you will need to shut things down and reboot. 
           video: [[https://vimeo.com/448908366][after Rufus Finishes]] 
  7. The test! After installation to the USB power off. Restart. Select you boot from USB option and see your linux installation. [[https://vimeo.com/channels/i2c4p/453034310][video: your first Xubuntu boot explained]] 
  8. Test persistence
     Open _mousepad_ (or anything else you find that lets you edit a document) and save something trivial to your Desktop like a text file that says "Hello world." Save it. Power off. Restart your Ubuntu system and see if the file is still there. If so, you have done what you need to get a system working for this course.
     [[https://vimeo.com/453295883][video: testing persistence and other housekeeping]]
  9. Prove you can install a package.
     1. Open the terminal.
     2. run ~sudo apt update~
     3. run ~sudo apt install emacs~
     4. Follow the instructions in [[file:../assessments/installEmacs.org][installEmacs]] assessments
  10. Celebrate!
** Comments
   The videos where you can watch my screen for the update and booting process can be found listed below. They are of lower quality since they require filming a computer screen by pointing a camera at it, but they do give you a sense of the amount of time things take and what the screens look like. This could be helpful as you work through the installation steps. 
*** Lower Quality Videos Recorded of My Screen in Booting Process From USB
    1. [[https://vimeo.com/449006223][Successful Boot]]
    2. [[https://vimeo.com/453049176][First Boot]]
    3. [[https://vimeo.com/453075287][Test Persistence]]
    4. [[https://vimeo.com/453075670][First Shutdown]]
    5. [[https://vimeo.com/453049139][Sudo Apt Update]]
    6. [[https://vimeo.com/453075607][Sudo Apt Upgrade]]
** Troubleshooting
   - I don't have a USB port? :: Do you have an SD card? If not, you will need a different computer.
   - My Mac doesn't start UNetbootin :: That may be an issue with your version of OSX. Check out his [[https://youtu.be/YwvDemR60vw][video]] for an example of a workaround. 
* Steps in Detail - Virtual Machines
Writing in Spring 2022 it has gotten easier to get a version of Linux running on both Windows and Macs. However, you have to pay attention to the version of software and the type of Mac you have.

I am not providing instructions for any version of windows prior to Windows10 and the videos demonstrate for Windows 11.

For Macs you need to know if you are using an /Intel/ mac or an /M1/ mac. Finding out is on you.
** Windows 11
1. Make sure hypervisor capacity is enabled in your [[https://vimeo.com/699876547][computer's bios]].
2. Tell Windows 11 to use the [[https://vimeo.com/699876547][hypervisor]].
3. [[https://vimeo.com/699876560][Install Ubuntu]].
   These steps are illustrated in the linked videos.
** Intel Macs
1. [[https://vimeo.com/699876529][Get the Virtual Box virtualization software.]]
2. Create the [[https://vimeo.com/699876515][virtual machine.]]
3. Make sure you have the [[https://vimeo.com/699876505][xubuntu iso.]]
4. [[https://vimeo.com/699876505][Install xubuntu]]  to your virtual machine.
** M1 Macs
1. [[https://vimeo.com/699876351][Get the UTM software and use it to install a ubuntu iso]].
   The steps will be:
   1. Get UTM.
   2. Install Ubuntu Server
   3. Use your Ubuntu Server installation to install the Xubuntu desktop.
* Other Methods     
  You do not have to install and run Linux from a Virtual Machine or external device (like a USB). Here are some other options you can consider.
** Dual Boot
   With this set up you have more than one operating system. You can use your usual Windows or Mac operating system, but if you choose, when you start, you can opt to use the Linux system you installed.
   If you are going to try this (it is not that hard - I am typing on a dual booted machine right now) you should *back-up* everything critical. The risk is small, but you can lose data in this process. Do not do this without first backing up all your critical data and files. 
   For Apple users search for ~Refind~ as the tool to handle dual booting. I found [[https://www.lifewire.com/dual-boot-linux-and-mac-os-4125733][this guide]] for dual booting a Mac on line and it looks reasonably comprehensive and up-to-date (June 2020). I have *not* tried it for a Mac. But all the steps accord with my general knowledge on the process. There are a lot of steps. The key is patience. Don't rush. And don't skip steps.
   Windows10 users will find lots of online advice for dual booting with Ubuntu, and Ubuntu is generally smart enough to detect your Windows installation and not overwrite it. Here is [[https://itsfoss.com/guide-install-linux-mint-16-dual-boot-windows/][one online guide]] I found that walks through the steps. It uses Linux Mint, but the steps and screens you will see are very similar to Ubuntu flavors. If you have created the USB per my steps above, you will only need to first prepare a partition on your Windows computers' hard drive and then follow the instructions for after having clicked the "install" command from the USB. The steps for making the USB itself will already have been done. Of course, if you did not do that already, then follow all the steps. 
** Virtual Machine
In addition to the terse instructions above there are some additional ways to use Linux  on Windows that are sort of like a virtual machine. Windows now has a built in subsystem for Linux. Look for information on using ~WSL2~ (Windows Subsystem for Linux v2) [note the version 2 is the more modern and the recommended one]. You may have some trouble running some graphical applications (at least easily) if you go this route, but support is improving rapidly. 
** Linux only
   This is like a standard installation, except when you start your computer it starts in Linux just like it starts in Windows/Mac now. I highly recommend this option. Many older computers run linux very well. Systems that were slow under windows can become quite perky with XUbuntu. If you have an old laptop or can find one in a family member's closet, or buy one for 150 CAD (the price of expensive textbooks in the old days). You can just install Linux to the computer and use it as a test, learning laptop and save your other device for your other classes and personal use. The computer I will be using in class uses this option and dates from 2011 (Lenovo X220T). I manually upgraded the RAM from 4 to 16GB and changed the old hard drive for an SSD. It is very fast. The only problem is the battery life is atrocious. Still it shows that you can get a lot from old hardware. The nice things about these older Lenovos is you can take them apart and replace things. Especially useful to those of you concerned with Ewaste.
* Assessments
  1. [[file:../assessments/installXubuntuAssessment.org][Verify Xubuntu Install]]
  2. [[file:../assessments/installEmacs.org][Verify Package Installation (Emacs)]]

